
name: Deploy to CloudFront

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 117819748843
  DOMAIN_NAME: home.kevin-mcquate.net
  PUBLIC_ZONE_BUCKET_NAME: public-zone-117819748843-us-east-1
  PUBLIC_ZONE_PREFIX: ${{ github.event.repository.name }}
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

permissions:
  contents: read

defaults:
  run:
    working-directory: portfolio

jobs:
  build_resume:
    name: Build resume HTML, PDF and PNG
    
    runs-on: ubuntu-latest
    environment: production
    container:
      image: pandoc/extra:latest-ubuntu

    steps:
    - name: Checkout
      uses: taiki-e/checkout-action@v1

    - name: install wkhtmltopdf
      working-directory: resume
      run: |
        export DEBIAN_FRONTEND=noninteractive
        wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/wkhtmltox_0.12.6.1-2.jammy_amd64.deb
        apt install -y ./wkhtmltox_0.12.6.1-2.jammy_amd64.deb
    
    - name: Convert to PDF and PNG
      working-directory: resume
      run: |
        pandoc -f gfm -t html -o resume.html resume.md
        wkhtmltopdf  resume.html resume.pdf
        wkhtmltoimage resume.html resume.png

    - uses: actions/upload-artifact@v2
      with:
        name: resume.pdf
        path: resume/resume.pdf

    - uses: actions/upload-artifact@v2
      with:
        name: resume.png
        path: resume/resume.png

  deploy:
    name: Deploy
    needs: build_resume
    runs-on: ubuntu-latest
    environment: production
    container:
      image: public.ecr.aws/sam/build-nodejs20.x:latest

    steps:
    - name: Checkout
      uses: taiki-e/checkout-action@v1

    - uses: actions/download-artifact@v2
      with:
        name: resume.pdf
        path: portfolio/public/

    - uses: actions/download-artifact@v2
      with:
        name: resume.png
        path: portfolio/public/

    - name: npm install
      run: npm install 

    - name: React app deploy 
      run: |
        npm run build
        aws s3 rm --recursive s3://${PUBLIC_ZONE_BUCKET_NAME}/${PUBLIC_ZONE_PREFIX}/
        aws s3 cp --recursive build/ s3://${PUBLIC_ZONE_BUCKET_NAME}/${PUBLIC_ZONE_PREFIX}/

    - name: SAM build
      run: sam build
      
    - name: SAM deploy
      run: >
        sam deploy 
        --stack-name ${{ github.event.repository.name }}
        --region ${AWS_REGION}
        --no-fail-on-empty-changeset
        --capabilities CAPABILITY_AUTO_EXPAND
        --s3-bucket deployment-zone-${AWS_ACCOUNT_ID}-${AWS_REGION}
        --s3-prefix ${{ github.event.repository.name }}
        --parameter-overrides 
        DomainName=${DOMAIN_NAME}
        DomainTLSCertificateArn=arn:aws:acm:us-east-1:117819748843:certificate/9f845b90-30ee-4f2a-adaa-e48b9efcec07
        PublicS3BucketName=${PUBLIC_ZONE_BUCKET_NAME}
        PublicS3Prefix=${PUBLIC_ZONE_PREFIX}

    # - name: Invalidate CloudFront cache
    #   run: aws cloudfront create-invalidation


